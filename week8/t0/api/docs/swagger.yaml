definitions:
  model.BookInfo:
    properties:
      author:
        type: string
      category:
        type: string
      id:
        type: string
      is_lent:
        type: boolean
      name:
        type: string
    required:
    - author
    - category
    - id
    - is_lent
    - name
    type: object
  model.UserInfo:
    properties:
      id:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - id
    - password
    - username
    type: object
info:
  contact: {}
  license:
    name: Apache 2.0
  title: 图书管理系统-api测试
paths:
  /v1/admin:
    delete:
      consumes:
      - application/json
      parameters:
      - description: book_info
        in: body
        name: book_info
        required: true
        schema:
          $ref: '#/definitions/model.BookInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg": "admin delete book success"}'
          schema:
            type: string
        "400":
          description: '{"msg": "admin delete book bad request"}'
          schema:
            type: string
        "401":
          description: '{"msg": "admin auth failed"}'
          schema:
            type: string
      summary: 删除书籍
      tags:
      - admin
    post:
      consumes:
      - application/json
      parameters:
      - description: book_info
        in: body
        name: book_info
        required: true
        schema:
          $ref: '#/definitions/model.BookInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg": "admin add book success"}'
          schema:
            type: string
        "400":
          description: '{"msg": "admin add book bad request"}'
          schema:
            type: string
        "401":
          description: '{"msg": "admin auth failed"}'
          schema:
            type: string
      summary: 新增书籍
      tags:
      - admin
    put:
      consumes:
      - application/json
      parameters:
      - description: book_info
        in: body
        name: book_info
        required: true
        schema:
          $ref: '#/definitions/model.BookInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg": "admin update book success"}'
          schema:
            type: string
        "400":
          description: '{"msg": "admin update book bad request"}'
          schema:
            type: string
        "401":
          description: '{"msg": "admin auth failed"}'
          schema:
            type: string
      summary: 更新书籍信息
      tags:
      - admin
  /v1/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: user_info
        in: body
        name: user_info
        required: true
        schema:
          $ref: '#/definitions/model.UserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg": "common login success"}'
          schema:
            type: string
        "400":
          description: '{"msg": "common login bad request"}'
          schema:
            type: string
      summary: 登录
      tags:
      - common
  /v1/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: user_info
        in: body
        name: user_info
        required: true
        schema:
          $ref: '#/definitions/model.UserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg": "common register success"}'
          schema:
            type: string
        "400":
          description: '{"msg": "common register bad request"}'
          schema:
            type: string
      summary: 注册
      tags:
      - common
  /v1/user:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: '{"msg": "get book success"}'
          schema:
            type: string
        "400":
          description: '{"msg": " get book bad request"}'
          schema:
            type: string
        "401":
          description: '{"msg": " auth failed"}'
          schema:
            type: string
      summary: 获取书籍信息
      tags:
      - common
swagger: "2.0"
